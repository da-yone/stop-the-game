name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    name: Quality Gate

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint with annotations
      run: |
        npm run lint -- --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif
        echo "ESLint completed"
      continue-on-error: true

    - name: Upload ESLint results to GitHub
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: eslint-results.sarif
        wait-for-processing: true

    - name: TypeScript strict check
      run: npm run type-check

    - name: Run tests with detailed output
      run: npm test -- --verbose --coverage

    - name: Check test coverage threshold
      run: |
        coverage_percentage=$(npm test -- --coverage --silent | grep -oP 'Lines\s+:\s+\K\d+(?=\.\d+%)' || echo "0")
        if [ "$coverage_percentage" -lt 90 ]; then
          echo "❌ Test coverage ($coverage_percentage%) is below 90% threshold"
          exit 1
        else
          echo "✅ Test coverage ($coverage_percentage%) meets 90% threshold"
        fi

    - name: Comment coverage on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const { execSync } = require('child_process');
          try {
            const coverage = execSync('npm test -- --coverage --silent', { encoding: 'utf-8' });
            const coverageMatch = coverage.match(/Lines\s+:\s+(\d+\.?\d*%)/);
            const coveragePercent = coverageMatch ? coverageMatch[1] : 'Unknown';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📊 Test Coverage Report
              
**Line Coverage:** ${coveragePercent}

${ coveragePercent.replace('%', '') >= 90 ? '✅' : '❌' } Coverage threshold (90%): ${ coveragePercent.replace('%', '') >= 90 ? 'PASSED' : 'FAILED' }

<details>
<summary>View detailed coverage report</summary>

\`\`\`
${coverage}
\`\`\`
</details>`
            });
          } catch (error) {
            console.error('Coverage comment failed:', error);
          }